import asyncio

from typing import Callable, List
from grpclib.client import Channel

# generated by protoc
# python -m grpc_tools.protoc -I . --python_betterproto_out=frontend\src\betterproto proto\service.proto
from .betterproto.bone_generator import BoneGeneratorStub, Members, Member, Vertex

class RpcHandler:
    @classmethod
    async def rpc_async_req(cls, in_members: List["Member"], callback: Callable):
        async with Channel('[::1]', 50052) as channel:
            service = BoneGeneratorStub(channel)
            reply = await service.execute(members=in_members)
            print(reply.members)
            #call_future = asyncio.create_task(service.execute(members=_members))
            #call_future.add_done_callback(callback)